What's new, what's been changed, what's been fixed
--------------------------------------------------

***********
* v1.7.1c *
***********

Current working revision.


- v1.7.1c -
-----------

(c) August 26th, 2004.
(b) August 23rd, 2004.
(a) August 20th, 2004.

New Features:
(c) Now the 'mpich'-implementation on Linux64 is available
    in addition to the known 'lam' one via flag in 'Makefile.Linux'.
    Note that you'll need a link to the 'mpich'-implemented 'mpirun' 
    to execute the resulting binary (the default is 'lam's 'mpirun').
(c) New architecture AMD64/Opteron is now supported as well,
    hence we have modified Makefiles with optimized settings.
(b) A new check_particles ADDITIONAL_CHECKS has been added 
    to test the 'part'-command.
(b) Improved method for calculating midpoint of bilayer.

Changes:
(a) Changed the core to procedure something working on SuSE 9.1/AMD64.
(a) Replaced the flag 'COM_on' by some reasonable checks.

Bugfixes:
(b) Fixed a bug in the 'part' command that relied on 'local_particles' 
    to contain physical particles only, although ghosts may be in there, too.
(a) Various fixes in the error handling occuring when switching off parts of the code.


- v1.7.0  -
-----------

(a) August 19th, 2004.

New Features:
(a) A new error handling code has been put into Espresso:
    Instead of the old 'fprintf(stderr, "..."); errexit()' scheme, 
    you have to include "errorhandling.h" and call
	char *errtxt = runtime_error(string_length);
	sprintf(errtxt, "...");
    The string_length just has to be larger than the actual error 
    message, so typically '128+n_i*TCL_INTEGER_SPACE+n_d*TCL_DOUBLE_SPACE' 
    will do.
    Afterwards the program will go on until the runtime errors are collected.
    If you write a new Tcl command, make sure that at the end you call 
    'mpi_gather_runtime_errors(interp, error_code)'. If the error_code is TCL_OK 
    and no runtime errors occured, it will simply return TCL_OK, but if an 
    runtime error occurs, it will be set as the interpreters result. If the state 
    was already TCL_ERROR, the background errors are appended, so the original 
    error message is not lost. In case of errors, the routine returns TCL_ERROR, 
    so in most cases you are done with
        return mpi_gather_runtime_errors(interp, error_code);
    Again, see the code.

Changes:
(a) Changed a lot of 'errexit()'s to using the new 'runtime_error' facility.
(a) The parsers for the tabulated potentials now generate Tcl errors instead of
    'errexit()'s.
(a) All parsers for interactions have been moved to the corresponding force files.

Bugfixes:
(a) A lot of bugfixes all over the place, mostly in the parsers.
(a) The layered cell system is now able to deal with moving particles.
(a) Setting bonds now generates an 'on_particle_change' on ALL nodes.
(a) Fixes for the Tru64 compiler.



**********************
* v1.7.Gold (Mezoti) *
**********************

Released on August 19th, 2004.



- v1.6.6h -
-----------

(h) August 18th, 2004.
(g) August 16th, 2004.
(f) August 13th, 2004.
(e) August 12th, 2004.
(d) August 10th, 2004.
(c) August  2nd, 2004.
(b) July   27th, 2004.
(a) July   27th, 2004.

New Features:
(f) Added new analysis command "analyze aggregation" to analyze the aggregation 
    state of molecules in the system.
(e) Added 'polyBlockRead <source>' to read in blockfile 'source'.
(d) Added Maxwell velocity distribution. 
(d) Added 'analyze activate' to activate one of the stored configurations.
(c) Added a new check for the NPT integrator to the testsuite.  
    The compressibility is calculated from volume fluctuations and compared 
    with a previously calculated value; this value was also checked by calculating 
    the compressibility from the change in pressure with changes in volume.  
    The value obtained by this method deviates at the third significant figure;
    hopefully this means the "fluctuation response theorem" holds for our NPT integrator.
(b) Added new analysis command for lipid bilayers 'analyze lipid_orient_order'.
    It's another command that is really only useful for a bilayer system.
(a) Introduced ghost system flags, at the moment just ghosts_have_v, which
    determines wether when updating the position also the velocity is updated.
    Needed for DPD and RATTLE. Do not directly change the variable, but modify
    the procedure on_ghost_flags_change() and call that.
(a) Added documentation for MMM2D, MMM1D and ELC, and the ghost communication stuff.

Changes:
(h) Improved the algorithm for the calculation of height function in modes analysis.
(h) Improved the parser for get_lipid_orients.  
(h) Merged 'analyze aggregation' with changes to modes analysis.
(d) Changed classification of stray lipids to account for the fact that some lipids 
    will become incorporated into periodic image bilayers. These lipids are still
    discarded in modes analysis but are classified as "STRAY".  
    Lipids which are genuinely floating in space are now classified as "REAL_STRAY".
(a) Moved 'anounce_rebuild_vlist' to 'announce_rebuild_vlist' and changed the MPI
    communications' 'Reduce'/'Bcast' to 'Allreduce'.
(a) Now errors in the 'integrate set' command are actually reported as errors.

Bugfixes:
(g) Fixed bug that after a cells_re_init the ghost cells were resized only
    for domain decomposition. Now this is handled by the cell structure code.
(d) Fixed bug in the mindist which only worked for symmetric sets.
(d) Fixed some bugs in the topology-mol_id sync command so that this now works 
    properly on multiple nodes.
(a) Fixed bug that 'thermostat set' crashes.


- v1.6.5d -
-----------

(d) July 26th, 2004.
(c) July 22nd, 2004.
(b) July 15th, 2004.
(a) July 13th, 2004.

New Features:
(d) Enhanced 'checkpoint_read <read_all_checkpoints> <write_pdb> <pdb_sfx>' to also
    be able to convert the whole checkpoint-series into a trajectorie / vmd-movie 
    '<write_pdb>0000.pdb' ... '<write_pdb>0359.pdb' (if e.g. 360 files were given)
    if <write_pdb>!=0; <pdb_sfx> determines the # of digits to be used while
    enumerating the configurations (defaults to 5).
(c) Enhanced analysis routine for estimating volume fluctuations and the systems'
    compressibility to 'analyze Vkappa [{ reset | read | set <Vk1> <Vk2> <avk> }]'
    allowing the user to save/restore the measurement.
(b) Introduced 'setmd npt_p_diff' to save/restore the content of nptiso.p_diff
    which might be necessary for recovering trajectories using the NpT-integrator.

Changes:
(a) The 'blockfile <channel> write thermostat' now adds an 'off'-statement to the 
    beginning of the thermostat block; this results in all other thermostats being
    deactivated before the stored ones are read in. Contrary to earlier versions,
    any 'temperature' or 'gamma' field before this block will therefore no longer 
    activate the langevin thermostat (a feature present for backwards compatibility
    only; it should no longer be used anyway) unless there's a corresponding entry
    within the thermostat block; however, 'temperature' or 'gamma' fields _after_
    the thermostat block (a big DON'T - always have the setmd-variables as first
    block in your file) will override its content nonetheless.

Bugfixes:
(b) Completed bugfix of 'integrate set npt_isotropic' by having nptiso.non_const_dim 
    be initialized with the same value for flags '1 1 1' and for no flags at all.
(a) Fixed a serious bug in the 'integrate set npt_isotropic' command which occured
    if that command was invoked several times (e.g. by reading in more than one 
    blockfile or checkpoint or by switching from NpT to NVT and back to NpT) while
    supplying the <x> <y> <z> flags each time, causing the internal 'nptiso.volume'
    to be too large because of a too large internal 'nptiso.dimension', resulting
    in too small instantaneous pressures 'npt_p_inst' and consequently to small
    volume adjustments, which consequently resulted in the wrong averaged volumes.
(a) The aforementioned change to the 'blockfile' command also fixes a bug that when
    a full blockfile (containing both 'temperature' and 'thermostat' fields in the
    standard successive order) is read in, the langevin thermostat will be active
    afterwards no matter if it was or was not contained in the 'thermostat' block.


- v1.6.4c -
-----------

(c) July  9th, 2004.
(b) July  5th, 2004.
(a) July  5th, 2004.

Changes:
(c) Now BOND_ANGLE_COSINE is the default three-body bonded potential 
    (if you don't like this, change it in 'config.h' and recompile).

Bugfixes:
(c) Fixed unintialized image box in 'map_position_node_array' before calling 'fold_position'.
(b) Fixed bug dealing with the initialization of 'lipid_orientation' command.
(a) Fixed pointer mismatch in 'dd_exchange_and_sort_particles' which in the rare event
    that more than half of the particles left the current cell had that cell resized,
    rendering the 'part = cell->part' pointer used invalid.


- v1.6.3f -
-----------

(f) July  1st, 2004.
(e) June 26th, 2004.
(d) June 23rd, 2004.
(c) June 21st, 2004.
(b) June 12th, 2004.
(a) June 11th, 2004.

New Features:
(e) Added new analysis routine 'analyze Vkappa' which measures the compressibility
    of the system by looking at the volume fluctuations.

Changes:
(a) Added sqrt(3) factor to the Langevin thermostat for re-entering the integrator
    (only if 'recalc_forces' is set as well, e.g. because a bond was removed, 
    the box rescaled or just the forcecap changed). 
    This is necessary since otherwise the temperature drops with the rate of 
    force recalculations due to missing correlations while drawing random numbers.

Bugfixes:
(f) Rewrote output of 'inter coulomb' to also fix a bug which caused an incomplete
    list to be returned if the command was used without electrostatics turned on.
(f) Fixed blockfile storage of nested lists to prevent increase of outermost bounds.
(d) Fixed bug in the rounding error handling code of fold_coordinate, which caused
    a particle in the unlikely event of rounding error mismatches to not be folded
    by box_l but by the inverse of it (box_l_i).
(c) Fixed bug in inter_print_bonded and inter_print_bond_partners causing loss
    of tabulated interaction data.
(b) Fixed typo in array index causing nptiso.p_vel to be accidentially overwritten
    while deriving virials in 'add_bonded_virials'.


- v1.6.2d -
-----------

(d) June 11th, 2004.
(c) June 10th, 2004.
(b) June  9th, 2004.
(a) June  8th, 2004.

New Features:
(b) Added new analysis routine 'analyze p_inst' which does exactly the same as
    'analyze pressure' but compensates for the difference in the ideal component
    between 'analyze pressure' and 'setmd npt_p_inst', hence more accurately displaying
    the contributions to the instantaneous pressure while using NpT.
    Note that you may use this function in both NpT- and NVT-ensembles, but be aware
    that since it is reverting the last half timestep in the velocity propagation,
    extra care is required to make sure that such a thing is valid upon execution.
(b) Added new global variable 'setmd npt_p_inst_av' which displays the instantaneous
    pressure of the NpT-integrator averaged over the last integration cycle.
(a) Added flag to 'checkpoint_read <source> [<read_all>]' so that you don't have to 
    read all checkpoints but can just read the last one.

Changes:
(d) Reverted 'add_non_bonded_virials'-calculation of the short range coulombic pressure
    contribution to former potential term, but now nptiso.p_vir is also using it
    in 'add_p3m_coulomb_pair_force' instead of the former virial expression r*F,
    such that now both nptiso.p_vir and 'analyze pressure' and 'analyze p_inst' all
    use U_c/(d*V) for the whole electrostatic pressure component (both r- and k-part).
(c) Now 'add_non_bonded_virials' uses the virial expression r*F for the short range
    coulombic interactions as well instead of the potential term (as for the k-part).
(c) Now internal flag 'nptiso.invalidate_p_vel' helps to decide if there was already
    an NpT-integration step (such that 'analyze p_inst' may use 'nptiso.p_vel') or if
    the secondary timestep reversion has to be used (replaces former box_l-comparision).
(c) Now 'analyze set chains' no longer automatically updates mol_ids.
(a) particles mol_id is now initialized to -1, and this can be used to check whether 
    the mol_id has been set. The topology sync function makes use of this.

Bugfixes:
(d) Fixed that a pressure calculation screwed up nptiso.p_vir when the following
    integration step didn't recalculate the forces (which was possible after v1.6.2b).
(b) Fixed bug that Espresso always recalculated the forces when leaving/reentering the sim loop.
(b) Fixed NpT-integration of systems using electrostatic interactions:
    + The bugs introduced in v1.6.1b by replacing the k-space-energy contribution to
      nptiso.p_vir by some weird k-space-force-components have been undone, hence the
      k-space component of the coulombic pressure should correctly enter p_inst now.
    + The (inverse) mesh constant of the p3m-grid is now scaled with the box-length 
      as well, adjusting lm.ld_pos accordingly to the grid's new position in the box.
      This should prevent mysterious crashes randomly occuring in 'invalidate_ghosts' 
      or 'P3M_calc_k_space_forces' due to invalid grid positions.
    - Fixed output of 'integrate set' for nptiso-parameters.


- v1.6.1g -
-----------

(g) May 18th, 2004.
(f) May 17th, 2004.
(e) May 13th, 2004.
(d) May 11th, 2004.
(c) May 10th, 2004.
(b) May  5th, 2004.
(a) May  3rd, 2004.

New Features:
(e) Added new option to synchronize topology and particle.mol_id information.
(c) New command 'tune_cells' which adapts the cell-grid towards best performance.
(c) New parameters 'integrator' and 'thermostat' for the 'blockfile'-command
    to also save the correct states (and parameters) of these two subsystems.
(b) New NpT Feature: The NpT-Integrator now accepts two additional arguments. 
    The first is a set of three integers ( x y z ) each of which turns on or off 
    the NpT integrator and thermostat in that direction; a value of 1 turns on
    the box length motion and a value of 0 turns it off.  
    The second new argument is a flag "-cubic_box"; when set, this flag ensures 
    that box length changes are completely isotropic in all directions even 
    though box length changes in one or more of these directions may in fact 
    be decoupled from the particle motion. 
    Internally this has been achieved by splitting up the virial part of the
    instantaneous pressure to nptiso.p_vir[3] reflecting the three directions of
    the pressure tensor. Note that due to its periodicity electrostatic systems
    using p3m are still restricted to 3D-periodic and -isotropic systems!
    

Changes:
(d) 'writepdbfoldchains' now requires a list of 3 box lengths (as returned from 
    [setmd box_l] ) - old scripts using these features need to be modified.

Bugfixes:
(g) Fixed problem with lipid flip-flop analysis that caused imd to fold incorrectly.
(f) Fixed modes analysis so it doesn't crash ESPResSo when there is a hole in the membrane.
(c) Fixed problems of 'calcObsAv' when a "-" was part of the column headers.
(b) Fixed bug in the velocity rescaling on the master node.
(b) Fixed warnings that occur if ELECTROSTATICS is not compiled in.
(a) Fixed a bug in the calculation of max_skin: Now it cannot be larger than local_box_l.
(a) Fixed warnings in the ELC tuning routine.



*********************
* v1.6.Gold (Icheb) *
*********************

Released on April 29th, 2004.



- v1.5.8e -
-----------

(e) April 29th, 2004.
(d) April 28th, 2004.
(c) April 26th, 2004.
(b) April 23rd, 2004.
(a) April 22nd, 2004.

New Features / Changes / Bugfixes:
(e) Final NpT-Update: The NpT-Integrator does now run efficiently and smoothly.
    + Unlocked faster re-scaling of just the geometrical parameters of the system
      instead of reinitialising the whole cell system more than necessary (i.e. only
      if max_range > cell_range) in every timestep.
    + Added missing geometrical parameter 'shift' within the GhostCommunication-structures
      within the GhostCommunicator-structures of the 'dd_exchange_and_sort_particles'-regime
      to the rescaling tasks in 'dd_NpT_update_cell_grid'.
    + Until a better criterion is found, the algorithm will renew the Verlet list
      in every timestep - not perfect, but still much better than previous treatment.
    + Finally, fixed a mean bug that rescaling the old positions at the wrong index
      caused the bond-list to be accidentally overwritten with nonsense data.
(d) 1) New bonded potential: torsional dihedral angle potential.
       Syntax is: inter i dihedral <mult> <bend> <phase>
       This is a four body interaction. The bond has to be stored at the
       second particle. For more information see the documentation of the
       tcl inter command and dihedral.h
    2) New tabulated bonded potentials:
       Syntax is: inter i tabulated <type> <filename>
       There are three types implemented, namely "bond" for a
       tabulated bond length potential, "angle" for a tabulated bond
       angle potential and "dihedral" for a tabulated dihedral
       potential. The file format for the tabulated force and energy
       value is the same as for the non-bonded tabulated
       potential. For more information see the documentation of the
       tcl inter command and tab.h. WARNING: I had no time to test the
       tabulated dihedral angle potential yet.
    3) New global variables: max_cut_non_bonded, max_range_non_bonded and max_range_non_bonded2
       These variables have to do with the maximal interaction range
       of non-bonded and short range electrostatic potentials and are
       used by the verlet pair list algorithms. They are defined
       similar to the variables max_cut, max_range and
       max_range2. They keep the Verlet pair lists smaller, if the
       maximal interaction range for non-bonded potentials is smaller
       then the maximal interaction range of bonded interactions in
       the system. This has no effect on the cell_structure nad the
       communication of ghost particles.
(a) Major NpT-Update: The NpT-Integrator does now work properly, though still not at top efficiency.
    + The code no longer crashes when updating ghost particles after enforcing a 'cells_re_init'.
    + Now the new box-length is communicated after the particles are rescaled.
    + Fixed wrong p_vel that always had p_vel updated after velocities were propagated.
    + Fixed wrong friction_g0-contribution due to new (instead of old) velocities as arguments.
    - Slimlined 'dd_NpT_update_cell_grid' to increase processing speed; it also got the scaling
      factor as argument (passed by 'on_NpT_boxl_change') to improve the 'max_range'-criterion.
    - Temporarily deactivated 'cells_re_init'-shortcut as it's not yet working;
      expect a speedup of 40x...90x once it's done.
    + Now the old particle positions are rescaled as well.

New Features:
(e) Added poststore and prefetch to domain decomposition.
(d) Implemented cutoff and range variables for verlet pair algorithm.
(c) Added EVENT_TRACEs.
(b) Added warning when pressure is calculated while MMM2D/MMM1D are on.
(b) Added ADDITIONAL_CHECK for particles outside the allowed box.

Bugfixes:
(e) Fixed bug that electrostatic energy was written even if no electrostatics
    were set, causing a core dump.
(c) Now box length can no longer be zero.
(b) Bugfix that not the full sum over p,q was done.


- v1.5.7h -
-----------

(h) April 22nd, 2004.
(g) April 19th, 2004.
(f) April 13th, 2004.
(e) April 10th, 2004.
(d) April  1st, 2004.
(c) March 29th, 2004.
(b) March 22nd, 2004.
(a) March 21st, 2004.

New Features:
(g) Writing out of far cut of MMM2D/ELC.
(f) Electrostatic charged plane potential 'plate' added.
(f) Added check for too far movement to ADDITIONAL_CHECKS.
(f) Now TK and other graphical output is also supported on Darwin
    using darwinlink.sh: adds Mac OS resource fork after linking.
(f) Optimized compiler-flags for Pentium-M and -III on Linux.
(e) Added new analyzation command 'analyze necklace' to examine 
    the structure of e.g. polyelectrolytes in poor solvent.

Changes:
(g) Cell structure 'layered' now also uses the 'rebuild_verletlist' 
    flag to avoid unnecessary updates.
(f) Changed constraint 'rod' to be purely electrostatic;
    Use a 'cylinder' to create the excluded volume separately.
(f) Reversed vector treatment ('mmm2d.c').
(f) Added check for too far movement to ADDITIONAL_CHECKS.
(e) Moved verlet update to 'cells.c'; now it is also more general, 
    as is 'layered.c'.
(b) Setting 'setmd piston 0.0' now disables the nptiso-thermostat
    (if compiled in), otherwise it does no longer complain about
    that (essentially) improper value for compatibility reasons.

Bugfixes:
(h) Fixed a bug in 'cells_update_ghosts' that caused the ghost-communicator
    to be executed twice; hence, the code should be faster now.
(g) Fixed major bug that setting the skin too late in the script file
    did not change the maximal interaction range, resulting in cells
    becoming too small; as a consequence, interactions might have
    been omitted on course of the simulation.
(g) Fixed bug that switching off electrostatics was sometimes not possible.
(g) Fixed bug that max range was not set often enough.
(g) Fixed bug in constraint rod.
(f) Fixed debug statements when THERMO_DEBUG is switched on.
(f) Fixed bug in 'layered.c' that p_old was not updated.
(f) Fixed bug in near formula for precisions below 10^-10 ('mmm2d.c').
(d) MPI_GET_PARTICLES fixed to allow empty nodes and bonds.
(c) Fixed several compiler issues on the OSF1-architectures in
    'Makefile.OSF1' (now enforcing std.C which in turn enables
    useful warnings), 'statistics_chain.c' (pow -> SQR), 'imd.c'
    and 'mmm2d.c'.
(b) Fixed wrong parsing of chain structure info if given in addition
    to one of the analyze-commands in 'statistics_chain.c', e.g.
    'analyze re [<chain_start> <n_chains> <chain_length>]'; now,
    supplying the optional parameters will no longer result in the
    (unfounded) error message 'only chain structure info required'.
(a) Fixed severe bug in 'add_bonded_virials' which caused the bonded
    component of the pressure to be derived falsely. This error was
    introduced with the new system structure in v1.5.Alpha, so all
    pressure results produced with that or later versions should be
    re-derived; however, the actual simulation -as long as it's script
    did not depend on the pressure results- was not affected by this.
    Due to the internal storage policy of ESPResSo (forces are rescaled
    by 0.5*timestep^2) the deviation to the true bonded pressure scales
    with the timestep: As smaller it was as less noticable this error
    should have been in your simulations.


- v1.5.6d -
-----------

(d) March 19th, 2004.
(c) March 18th, 2004.
(b) March 17th, 2004.
(a) March  5th, 2004.

New Features: 
(d) Added a new analysis command [analyze modes2d] which is designed
    to allow a fluctuation analysis of a lipid membrane system.  This
    command is currently restricted to a special type of membrane
    configuration.  A more generalized command and related tcl scripts for
    processing the results will be added later.

Changes:
(b) [analyze bond_l] now returns a four member list with the average, standard deviation, 
    maximum value and minumum value of the sample; the same holds true for 
    [analyze <bond_l>], however, note that now it returns the maximum/minimum 
    in all the configurations and the values don't have to belong to same chain. 
    It was done this way to ensure uniformity. The testsuite has been adapted to this.
(b) In statistics_chain.c, the bond length calculations have been modified. It 
    actually calculates the average now (not the root mean square avg as was done 
    before); the error is taken as one standard deviation.

Bugfixes:
(c) Falsely calling 'analyze nbhood' without any arguments no longer unintentionally
    crashes the program but returns an appropriate error message instead.
(a) Added nptiso-thermostat random noise to 2nd propagation of the velocities as well.
(a) Fixed wrongly scaled prefactors of the nptiso-thermostat which do now remember
    to include an additional 'time_step' for the propagated velocities.


- v1.5.5b -
-----------

(b) March 2nd, 2004.
(a) March 1st, 2004.

New Features:
(b) Introduced new structure 'nptiso' in which all global variables
    related to the NpT-integration-scheme are contained.
(b) Now 'integrate' returns integrator informations, too, as well as
    'thermostat set <what>' may be used instead of 'thermostat <what>.

Changes:
(b) P3M is now entirely scaling invariant, replacing 'alpha' and 'r_cut'
    by rescaled 'alpha_L' and 'r_cut_iL'; for performance reasons the
    forces- and energy-derivation is still using the unscaled versions,
    so are the I/O-routines.
(b) Exchanged virial criterion 'if(piston!=0.0)' by test for 'integ_switch'
    in all functions deriving forces; should result in a speed-up if compiled in.
(a) Replaced p3m.alpha and p3m.r_cut with rescaled versions p3m.alpha_L and p3m.r_cut_iL
    which renders the p3m-algorithm to be independent of box_l.
    The old alpha and r_cut do still exist, mainly for I/O- and speed-purposes
    (since the forces- and energy-routine in p3m.h use both).

Bugfixes:
(b) Fixed wrong and/or missing safety checks for nptiso-integrator.
(b) Fixed handling of missing exceptions in 'thermostat set'.


- v1.5.4b -
-----------

(b) February 25th, 2004.
(a) February 20th, 2004.

New Features:
(b) Extension of the tcl command integrate. "integrate" is now 
    also used to set the integration method and parameters of 
    this methods. The general parameters <time_step> and <skin> 
    remained at the 'setmd' command. The usage of integrate is now:
        integrate <INT n steps>
	integrate set
	integrate set nvt
	integrate set npt_isotropic <DOUBLE p_ext> [<DOUBLE piston>]
(a) New tcl command: thermostat to control the new thermostats:
    Usage: thermostat langevin <temperature> <langevin_gamma>
           thermostat dpd <temperature> <dpd_gamma> <dpd_r_cut> 
           thermostat npt_isotropic <temperature> <nptiso_gamma0> <nptiso_gammav>
           thermostat off
	   thermostat
    Notes: - You can combine different thermostats.
           - At the moment they share a single temperature (if you are aware 
	     of any problems where one would need different temperatures, 
	     please let us know).
	   - thermostat off turns all thermostats off and sets all 
	     thermostat parameters to zero.
           - For NVE ensemble use thermostat off.
	   - DO NOT USE setmd temperature AND setmd gamma (:= langevin_gamma) 
	     IN NEW SCRIPTS! (even though they still work).
	   - For backwards compatibility ESPResSo starts with the 
	     Langevin thermostat turned on.

Bugfixes:
(a) Fixed unfavourable handling of round-off errors in 'fold_coordinate'
    which on rare occasions caused a particle to end up in the wrong box.


- v1.5.3a -
-----------

(a) February 14th, 2004.

New Features:
(a) Implemented an (N,p,T)-ensemble integrator, as published by
    Kolb, Duenweg, J.Chem.Phys. 111(8) 4453 (1999).
    To activate it, use the corresponding compiler-flag in 'config.h'
    and set the new parameters 'piston', 'g0', 'gv', and 'p_ext'.
(a) New global variable 'p_inst' returns the measure instantaneous pressure
    if (N,p,T)-integration is used.


- v1.5.2a -
-----------

(a) February  9th, 2004.

New Features:
(a) introducing topoplogy concept.

Changes:
(a) 'analyze set chains <start> <N_P> <MPC>' does now set the topology,
    hence 'analyze set chains' has been discontinued.

Bugfixes:
(a) fixed severe bug that had the p3m tuning routine to not allocate
    the appropriate amount of memory for the final parameter set, but
    used the last trial's settings instead.


- v1.5.1b -
-----------

(b) February  6th, 2004.
(a) January  30th, 2004.

New Features:
(b) Inplementation of NEMD (Non Equilibrium Molecular Dynamics). This method
    introduces a shear rate corresponding to a Couette flow by artificially
    pumping energy into the system via a momentum exchange between two slabs
    of the system. For more information see for example Evans/Morriss:
    Statistical mechanics of Nonequilibrium Liwuids (Academic Press, London,
    1990) or Soddemann/Duenweg/Kremer (Phys. Rev. E; 68; 2003).
    All procedures reside in the fiiles nemd.c/h. 
    Usage of the new tcl command nemd:
         nemd - returning nemd status
	 nemd off - turn off nemd
	 nemd exchange <INT n_slabs> <INT n_exchange>
              - enable method exchange momentum 
	 nemd shearrate <INT n_slabs> <DOUBLE shearrate>
              - enable method with fixed shear rate
	 nemd profile - return the velocity profile
	 nemd viscosity - return the viscosity
    Notes: - The slabs are oriented perpendicualr to the z direction.
           - The shear is applied in x direction
           - Use only with a DPD thermostat or in an NVE ensemble.
           - Do not use other special features like part fix or 
	     constraints inside the top and middle slab.
	   - Per default NEMD is not compiled in.
(a) The bond angle potential can now be used also for equilibrium angles different
    from 180 degree (stretched configuration). This should not affect any previous
    simulations (except numerical errors). The default potential form is now:
    V = k (1+cos(phi+phi0)).
(a) With help of compiler flags used as switch you can now choose between three
    different potential forms (the corresponding #define statements are as usual
    in config.h):
    BOND_ANGLE_HARMONIC   ->  V = 1/2 k (phi - phi0)^2
    BOND_ANGLE_COSINE     ->  V = k (1+cos(phi-phi0))
    BOND_ANGLE_COSSQUARE  ->  V = 1/2 k (cos(phi)-cos(phi0))^2



**********************
* v1.5.Beta (Neelix) *
**********************

Released on January 29th, 2004.


- v1.5.Alpha -
--------------

(b) January 15th, 2004.
(a) January  7th, 2004.

New Features: 
(a) new command 'cellsystem { domain | nsquare }' to choose the internal particle structure.
(a) comfixed interaction is implemented. This interaction fixes the center of mass 
    of all particles of a given type.
(a) comforce interaction is implemented. This interaction is used to apply a force 
    on two differenent types of particles. The force is applied either along the
    major axis of type_1 particles (e.g. bundle of rods), or perpendicular to the 
    major axis of type_1 particles in the direction of the vector joining center
    of mass's of type_1 and type_2.

Changes:
(b) 'analyze pressure ideal' does no longer use n_total_particles*temperature/volume but rather
    measures the particles' velocities to deduct the ideal gas contribution to the pressure
    from there; consequently, its value is at last the very same as the trace of p_IK1;
    note however, that the ideal gas now depends on whether or not ROTATION is compiled in
    (changing the degrees of freedom from 3 to 6), even if the particles don't use that property
(b) 'checkpoint_set' now also saves informations on external forces, fixed particles, and
    rotational properties if the corresponding flags are compiled in.
(a) completely reworked the internal particle structure, now having six substructures per particle
    and a choice of two entirely different particle administration systems (domain decomposition
    or homogeneous N^2-mode)

Bugfixes:
(b) fixed several memory leaks occuring when using newer version of the gcc-compiler
(b) fixed wrong prefactor of 'analyze pressure ideal' contained in early versions of v1.5.Alpha
(a) 'part fix' fixed
(a) the constraint energy is printed correctly now. In the old version, if 
    the constraint particle type is smaller than any real particle type, 
    the constraint energy was wrong, even though the total energy was correct
 


***********
* v1.1.2  *
***********

Released on December 19th, 2003.


- v1.1.2a -
-----------

New Features: 
(a) working version of tabulated lookup potentials is
    now implemented.  Be sure to check documentation as file format
    requirements are likely to change with new versions.

Changes:
(-) none

Bugfixes:
(a) 'part <ind> delete' now correctly deletes all bonds involved



***********
* v1.1.1  *
***********

Released on December 2nd, 2003.


- v1.1.0e -
-----------

(e) December 2nd, 2003.
(d) November 18th, 2003.
(c) November 13th, 2003.
(b) November 11th, 2003.
(a) November 3rd, 2003.

New Features:
(e) command 'constraint maze' to create a constraint with a maze-like structure,
    i.e. spheres connected by cylinders 
(d) command 'imd positions' has new optional flag '-fold_chains'
(c) command 'part fix' has new optional parameters, i.e. 'part fix [<x> <y> <z>]'
(b) command 'analyze p_IK1' replacing 'analyze p_bin'
(a) command 'analyze p_bin' to derive the pressure tensor of a given particle list
(a) command 'analyze bin' to create a particle list distributed into spherical bins

Changes:
(-) none

Bugfixes:
(e) fixed 'tuning.c' on Darwin-systems (e.g. MacOS)
(e) fixed that 'communication.c' would not compile without electrostatics-flag on
(b) fixed implementation of 'analyze p_bin' to correspond to Kirkwood's IK1-scheme
(a) fixed that 'analyze <g1>' and 'analyze <g2>' derived all of <g1>, <g2>, and <g3>
    and always returned <g3> only



*********************
* v1.1.Gold (Naomi) *
*********************

Released on October 20th, 2003.



*******************
* v1.0.Gold (Kim) *
*******************

Released on April 25th, 2003.

