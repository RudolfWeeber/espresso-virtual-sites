#!/bin/sh

usage() {
    cat <<EOF
Usage: $0 [-p PROCESSOR] [TESTCASES]...
  Run TESTCASE on PROCESSOR processors.
  Instead of specifying PROCESSORS and TESTCASES on the command line,
  you can set the environment variables TESTCASES and PROCESSORS.
EOF
    exit 2
}

# list of tests that are not supported by this version
BLACKLIST=

srcdir=@srcdir@
ESPRESSO=@top_builddir@/Espresso
#ESPRESSO_SCRIPTS=@top_srcdir@/scripts
#export ESPRESSO_SCRIPTS

# handle processors
processors=$PROCESSORS
if test $1 = "-p"; then
    processors=$2
    shift 2
fi

# handle testcases
testcases=$TESTCASES
if test $# -ge 1; then
    testcases="$@"
fi

# check if variables are available
if test -z "$processors" || test -z "$testcases"; then
    test -z "$processors" && echo "Processors not specified!"
    test -z "$testcases" && echo "No testcases specified!"
    usage
fi

# check for blacklisted tests
testcases_old=$testcases
testcases=
blacklisted=
for testcase in $testcases_old; do
    ignore=
    for bl_testcase in $BLACKLIST; do
	if test "$bl_testcase" = "$testcase"; then
	    ignore=1
	    break;
	fi
    done
    if ! test "$ignore"; then
	testcases="$testcases $testcase"
    else
	blacklisted="$blacklisted $testcase"
    fi
done

# link all files from the src directory to the run directory, if they are not identical
for file in `ls $srcdir/`; do
    if ! test -f $file; then
	echo @LN_S@ $srcdir/$file .
	@LN_S@ $srcdir/$file .
    fi
done


# execute the tests
for np in $processors; do
    echo
    echo "**************************************************"
    echo "**** RUNNING TESTSUITE FOR $np tasks"
    failed=
    ignored=
    succeeded=
    for testcase in $testcases; do
        # here go the error messages of the testcases
	errf=$testcase.err
	CMD="$ESPRESSO $srcdir/$testcase $np $errf"
	echo "**************************************************"
	echo "** $testcase"
	echo "Executing: \"$CMD\""
	$CMD
	rc=$?
	echo
	case $rc in
	    (0) 
	    echo "SUCCESS: $testcase"
	    succeeded="$succeeded $testcase"
	    rm -f $errf
	    ;;
	    (214) 
	    # 214 corresponds to "exit -42" in Tcl
	    echo "IGNORED: $testcase"
	    ignored="$ignored $testcase"
	    rm -f $errf
	    ;;
	    (*) 
	    echo "FAILED: $testcase"
	    echo "FOR ERROR MESSAGES, SEE $errf."
	    failed="$failed $testcase"
	    ;;
	esac
    done
    # interrupt if not all test cases on a certain processor number
    # were successful
    if test "x$failed" != "x"; then 
	echo "**************************************************"
	echo "Some test cases failed with $np tasks, interrupting test suite."
	break
    fi
done

echo 
echo "************************************"
echo "************************************"
echo "************ SUMMARY ***************"
echo "************************************"
echo "************************************"
echo "$np TASKS"

if test "x$blacklisted" != "x"; then
    echo "BLACKLISTED TESTS:"
    for testcase in $blacklisted; do
	echo "  $testcase"
    done
fi

if test "x$ignored" != "x"; then
    echo "IGNORED TESTS:"
    for testcase in $ignored; do
	echo "  $testcase"
    done
fi

if test "x$succeeded" != "x"; then
    echo "SUCEEDED TESTS:"
    for testcase in $succeeded; do
	echo "  $testcase"
    done
fi

if test "x$failed" != "x"; then
    echo "FAILED TESTS:"
    for testcase in $failed; do
	echo "  $testcase"
    done

    echo
    echo "**************************************************"
    echo "** Not all test cases were successful!"
    echo "** Have a look at the files testsuite/*.err for error"
    echo "** messages of the failed testcases."
    echo "**************************************************"
    echo

    exit 1
else
    echo
    echo "**************************************************"
    echo "** All tests were successful!"
    echo "**************************************************"
    echo
fi


