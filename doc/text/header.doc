/** \mainpage


<hr>
<center>

\image html logo.gif

<h1>

\htmlonly
<font color="blue"> <b>E</b></font>xtensible
<font color="blue"> <b>S</b></font>imulation
<font color="blue"> <b>P</b></font>ackage <br>
for <font color="blue"> <b>Res</b></font>earch
on <font color="blue"> <b>So</b></font>ft matter
\endhtmlonly

</h1>
<hr>
</center>
\latexonly
{\Large
{\Huge E}xpandable
{\Huge S}imulation
{\Huge P}ackage for
{\Huge Res}earch in
{\Huge So}ft matter
}
\endlatexonly

\section introduction Introduction

Espresso is a MPI based parallel molecular dynamics (MD) program developed
by members of the group of C. Holm
(<a href="http://www.mpip-mainz.mpg.de/~pep/index.html">PEP</a>) at the 
Theory Department of the MPI for Polymer Research, <a
href="http://www.mpip-mainz.mpg.de/">MPI-P</a>, in Mainz, Germany.
Espresso can be used as an MD/MC integrator for a variety of systems interacting
via a variety of potentials (in particular including Lennard-Jones potential and electrostatic interactions).
The program also allows to produce scientific movies using the
<a href="http://www.ks.uiuc.edu/Research/vmd/current/ug/ug.html">VMD</a>
software package (the Espresso logo was produced by the program itself!).

To perform a simulation Espresso uses a 
<a href="http://tcl.activestate.com">Tcl</a> script
which gives the user control over the program.
The standard Tcl language was extended by some \ref tcl "additional commands"
which allow to perform a complete MD/MC simulation. 

The script is interpreted on one node,
the master node, whereas the other nodes wait for the master node to issue
specific actions, i. e. a client-server model is utilized. More details
can be found in \ref communication.h "communication.h". During the
actual integration, however, the communication is done synchronously.
For more details see \ref integrate.c "integrate.c".



\section requirements Requirements

<ul>
<li> Script language: <a href="http://tcl.activestate.com">Tcl 8.3</a> or higher version
<li> mpi programming environment: depends on operating system (see below).
<li> Fast Fourier Transformation: <a href="http://www.fftw.org">fftw</a> 
</ul>
\todo Requirements: Which version of MPI is required?
\todo Requirements: MPI is only required for parallel execution

Supported operating systems:
<ul>
<li> LINUX (mpi programming environment: <a href="http://www.lam-mpi.org">lam</a>)
<li> OSF1
<li> AIX
</ul>


Only for some special purpose, for example you want to supplement your
simulations with a graphical user interface like it is done in the
sample script demo.tcl, you will also need  
<a href="http://tcl.activestate.com">tk 8.3</a> or higher version.

\section start Getting Started

\subsection start_env Environment Variables:

\todo Compilation and installation docs do not match the configure procedure!

For the work with ESPResSo you need to set the following environment variables (Please check the exact syntax for your shell/system):<br>
The path for the mpi binary has to be included in your execution path (For Linux this would be for example lam).
\verbatim 
setenv PATH "${PATH}:.:/opt/lam/bin"
\endverbatim
To be able to start ESPResSo from any directory the system has to know the location of the ESPResSo sources:
\verbatim 
setenv ESPRESSO_SOURCE  "your_directory/Espresso"
setenv ESPRESSO_SCRIPTS "your_directory/Espresso/scripts"
\endverbatim

\subsection start_compile Compilation:

In general you have to adopt the corresponding Makefile to your
system. Here just a short description how things should be arranged if
you want to use the provided Makefiles directly.<br>

<ol>
<li> Linux:<br>
<ul>
<li> tcl8.4: The library should be installed in <tt>/usr/lib/</tt> . The header files should reside in <tt>/usr/include/</tt>.
<li> lam should be installed in <tt>/opt/lam/bin/</tt> .
<li> fftw: The library should be installed in <tt>/usr/local/lib/</tt> . The header files should reside in <tt>/usr/local/include/</tt> .
</ul>

<li> OSF1:<br>
Documentation not ready.

<li> AIX:<br>
Special settings for an IBM Regatta system.
</ol>

After adjusting the makefile you can compile ESPResSo. Change into the directory Espresso and type:
\verbatim 
gmake
\endverbatim
to compile the code. The executable is in <tt>Espresso/obj-<your operating system\></tt>. With
\verbatim 
gmake docu
\endverbatim
you can create the html documentation (... including the page you are
reading at the moment). The documentation is in
<tt>Espresso/doc/html</tt>, the start page is <tt>Espresso/doc/html/index.html</tt>

If there are problems you can try to use 
\verbatim 
gmake clean 
\endverbatim
and 
\verbatim 
gmake dep
\endverbatim
before the compilation. 

\subsection start_first First Simulations

In the documentation the most important page for the beginning is the
description of the \ref tcl "Tcl Extensions". The most convenient way
is probably to go through the examples in the 
\ref samples "samples directory" in order to see how you can write your own
simulation scripts. We hope you will have fun using ESPResSo.

\section mpi_help Additional information for MPI-P ESPResSo users.

This section is only valid inside the theory cluster at the MPI-P in Mainz.

<ol>
<li> Get your PEP membership.
<li> Add the following lines to your .cshrc file.
\verbatim 
##################################################################
# Settings for ESPRESSO
##################################################################
if ( (`uname` == "Linux") ) then
    setenv PATH "${PATH}:.:/opt/lam/bin"
endif
# cvs root directory 
setenv CVSROOT ~pep/cvsroot
# TCL_MD source directory
setenv ESPRESSO_SOURCE  "your_directory/Espresso"
# TCL_MD script directory
setenv ESPRESSO_SCRIPTS "your_directory/Espresso/scripts"
\endverbatim
Replace your_directory by the directory where you want to install Espresso.
<li> Get your local copy of the latest stable release with:
\verbatim cvs checkout -r Mezoti Espresso \endverbatim
or with
\verbatim cvs checkout Espresso \endverbatim
for the latest cvs snapshot in the case you want to work on the code.
<li> Compile using 
\verbatim gmake \endverbatim
<li> Create documentation files (html, latex, man and rtf) using
\verbatim gmake docu\endverbatim
(This command works only on our Linux PCs (needs doxygen).
Use touch file_name.c if this does not work right away)
<li> Read the documentation carefully (Come on, there had been only 213 pages when I
was writing these lines) !!!
<li> Try the sample script files in \ref samples "samples directory".
<li> Complain if you experience problems.
</ol>

\section packages Tcl Packages which make use of Espresso
<ul>
<li> <a href="../../packages/mbtools/doc/index.html"> mbtools </a> a package for setting up and analyzing lipid membrane systems.
</ul>

\section restrictions Restrictions

<ul>
<li> The long range part is implemented for full periodicity, cubic
box and cubic mesh only. The program will probably crash if you mix up 
things here.
</ul>

\section bugs Bugs

No bugs known at the moment.

\section plans Plans for the future

<ul>
<li> Dipolar interactions
<li> Monte Carlo Integrator with some standard moves (translational, pivot, reptation, cluster)
<li> More general angle potential
<li> Torsion potential
<li> Force fields
<li> External fields
<li> Hydrodynamic interactions via an advanced Lattice Boltzmann method 
<li> Dissipative particle dynamics
<li> Non equilibrium molecular dynamics
<li> New algorithms for treating long range interactions: A local algorithm invented by T. Maggs and a finite difference multi-grid scheme proposed by D. Tsukerman.
</ul>

And we are open for more ideas for example coming from you.


\section help More help about ...

<ul>
<li> \ref tcl
<li> \ref variables_page
<li> \ref progguide
<li> \ref our_cvs
<li> \ref our_doxygen
<li> \ref blockformat
<li> \ref libEspresso
</ul>

*/
