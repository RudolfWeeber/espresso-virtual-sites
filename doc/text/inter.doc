/** \page tcl_inter The inter command
         \verbatim inter ( <particle_type_number1> <particle_type_number2> | <bond_type_number> ) <interaction_type> <value>+ \endverbatim
	sets the parameters for interactions.

<ol>
	<li> \anchor tcl_non_bonded <b>Non bonded interactions:</b> 
	\verbatim inter <particle_type_number1> <particle_type_number2> <interaction_type> <value>+ \endverbatim	
	Non bonded interaction between particles of types
	\<particle_type_number1\> and \<particle_type_number2\>
	(the types are those set using \ref tcl_part).<BR>
	Currently known \<interaction_type\>s are:

	<ul>
	    <li>\verbatim tabulated <filename> \endverbatim	
		An arbitrary tabulated non-bonded pair potential.
		
		To use this potential you must provide a file which contains the tabulated forces 
		and energies as a function of the separation distance.

		At present the required file format is simply an ordered list separated by whitespace.  
		The data reader first looks for a \p # character and begins reading from that point in the file.  
		Anything before the \p # will be ignored.  

		The first parameter you should supply in the file is the
		number of data points in the table.  This should be an integer.  Take
		care when choosing an appropriate value for the number of points
		remembering that a copy of each lookup table is kept on each node and
		must be referenced very frequently.

		The second parameter you should supply is the minimum tabulated separation distance. 
		The third parameter should be the maximum tabulated separation distance
		This will act as the effective
		cutoff value for the potential.  Between minval and maxval the
		force and energy are assumed to be tabulated at fixed intervals such
		that the size of this interval is given by:

		\f$ \frac{(maxval - minval)}{n-1} \f$

		Where \f$ n \f$ is the number of data points in the table
	
		The remaining data in the file should consist of n data triples \<distance\> \<force\> \<energy\>.  Note that
		distance is only included for human readability of the file. Its
		values do not matter but it must be present to satisfy the file read
		format. In the future a more structured file format will be required
		for the tabulated input file. The values of force and energy should be
		given as follows:

		force: 	\f$ -\frac{U'(r)}{r}\f$   

		energy:       \f$U(r) \f$ 


		\warning This feature has not been fully tested. Please use with care



	   <li>\verbatim lennard-jones <epsilon> <sigma> <cutoff> <shift> <offset> \endverbatim
		the well known Lennard-Jones potential
		\f[4 \epsilon \left(\left(\frac{\sigma}{r-offset}\right)^{12} -
				 \left(\frac{\sigma}{r-offset}\right)^6 + shift\right)\f]
		The order of the parameters is
		\f$\epsilon, \sigma, cutoff, shift, offset\f$.

		For system warmup you can cap the Lennard-Jones potential with a maximal force which can be set with:
		\verbatim inter ljforcecap <maxforce> \endverbatim
		For particle distances which would lead to larger
		forces than \f$ maxforce \f$ the Lennard-Jones
		potential is replaced by
		\f[ maxforce \;\;  r \f] 
		Particles placed exactly on top of each other will be
		subject to a force of magnitude \f$ maxforce \f$
		applied in \f$ \pm x \f$ direction.
		To return to the uncapped potential you have to set \f$  maxforce \f$ to zero using
		\verbatim inter ljforcecap 0 \endverbatim
		Note that ljforcecap applies to all given Lennard-Jones interactions regardless the particle types.

	   <li>\verbatim lj-cos <epsilon> <sigma> <cutoff> <offset> \endverbatim
		the Lennard-Jones+Cosine potential (Soddemann et. al. Eur. Phys. J. E. 6, 409-419 (2001))

		for	\f$ r<r_{min}=offset+2^{1/6}*\sigma \f$
            
			\f[4 \epsilon \left(\left(\frac{\sigma}{r-offset}\right)^{12} -
				 \left(\frac{\sigma}{r-offset}\right)^6 \right)\f]


		for \f$ cutoff>r>r_{min}=offset+2^{1/6}*\sigma \f$
            
		\f[\frac{1} {2} \epsilon \left(\cos (\alpha {(r-offset)}^2 + \beta) -1 \right) \f]
            
	        where \f$ \alpha \f$ and \f$ \beta \f$ are given by,
            
	        \f[ \alpha= \frac {\pi} { {(cutoff-offset)}^2 - {(r_{min}-offset)}^2 } \f]
            
                \f[ \beta= \pi \left( 1 - \frac {{(r_{min}-offset)}^2} {{(cutoff-offset)}^2 - {(r_{min}-offset)}^2 } \right) \f]

		The order of the parameters is
		\f$\epsilon, \sigma, cutoff, offset\f$.

            <li>\verbatim gay-berne <epsilon> <sigma> <cutoff> <k1> <k2> <mu> <nu> \endverbatim
		the Gay-Berne potential for prolate and oblate particles.
		The Gay-Berne potential is an anisotropic version of the classic Lennard-Jones potential,
		with orientational dependence in the range and well-depth functions \f$\sigma\f$ and \f$\epsilon\f$:
		\f[ U(\mathbf{r}_{ij}, \mathbf{\hat{u}}_i, \mathbf{\hat{u}}_j) = 
		4 \epsilon(\mathbf{\hat{r}}_{ij}, \mathbf{\hat{u}}_i, \mathbf{\hat{u}}_j)
		\left[ \left(\frac
		{\sigma_0}{\mathbf{r}_{ij}-\sigma(\mathbf{\hat{r}}_{ij},
		\mathbf{\hat{u}}_i,
		\mathbf{\hat{u}}_j)+\sigma_0}\right)^{12}-
		\left(\frac
		{\sigma_0}{\mathbf{r}_{ij}-\sigma(\mathbf{\hat{r}}_{ij},
		\mathbf{\hat{u}}_i,
		\mathbf{\hat{u}}_j)+\sigma_0}\right)^{6} \right] \f]

		where

		\f[ \sigma( \mathbf{\hat{r}}_{ij}, \mathbf{\hat{u}}_i, \mathbf{\hat{u}}_j) =
		\sigma_{0} \left\{ 1 - \frac{1}{2} \chi \left[
		\frac{ \left( \mathbf{\hat{r}}_{ij} \cdot
		\mathbf{\hat{u}}_i + \mathbf{\hat{r}}_{ij} \cdot
		\mathbf{\hat{u}}_j \right)^{2} }
			{1 + \chi \left(  \mathbf{\hat{u}}_i.\mathbf{\hat{u}}_j \right)  } 
		+ \frac{ \left( \mathbf{\hat{r}}_{ij} \cdot
		\mathbf{\hat{u}}_i - \mathbf{\hat{r}}_{ij} \cdot
		\mathbf{\hat{u}}_j \right)^{2} }
			{1 - \chi \left(  \mathbf{\hat{u}}_i \cdot \mathbf{\hat{u}}_j \right)  } 
		\right] \right\}^{-\frac{1}{2}} \f]

		and

		\f[ \epsilon(\mathbf{\hat{r}}_{ij},
		\mathbf{\hat{u}}_i, \mathbf{\hat{u}}_j) =
		\epsilon_0 \left( 1- \chi^{2}(\mathbf{\hat{u}}_i \cdot
		\mathbf{\hat{u}}_j) \right)^{-\frac {\nu}{2}}
		\left[1-\frac {\chi'}{2} \left( \frac {
		(\mathbf{\hat{r}}_{ij} \cdot \mathbf{\hat{u}}_i+
		\mathbf{\hat{r}}_{ij} \cdot \mathbf{\hat{u}}_j)^{2}}
		{1+\chi' \, \mathbf{\hat{u}}_i \cdot
		\mathbf{\hat{u}}_j }+
		\frac {(\mathbf{\hat{r}}_{ij} \cdot
		\mathbf{\hat{u}}_i-\mathbf{\hat{r}}_{ij} \cdot
		\mathbf{\hat{u}}_j)^{2}}
		{1-\chi' \, \mathbf{\hat{u}}_i \cdot
		\mathbf{\hat{u}}_j } \right) \right]^{\mu} \f]

		Here unit vectors \f$ \mathbf{\hat{u}}_i \f$ and \f$
		\mathbf{\hat{u}}_j \f$ give the orientation of the two
		particles and vector \f$ \mathbf{r}_{ij} = r_{ij}
		\mathbf{\hat{r}}_{ij} \f$ is the intermolecular
		vector.

		The parameters \f$ \chi = \frac{k_1^{2} - 1}{k_1^{2} +
		1 } \f$ and \f$ \chi' = \frac{k_2^{1/\mu} -
		1}{k_2^{1/\mu} + 1 } \f$ are responsible for the
		degree of anisotropy of the molecular properties. \f$
		k_1 \f$ is the molecular elongation, and \f$ k_2 \f$
		is the ratio of the potential well depths for the
		side-by-side and end-to-end configurations. Exponents
		\f$ \mu \f$ and \f$ \nu \f$ are adjastable parameters
		of the potential. There are several Gay-Berne
		paremeterizations exist; the original one being \f$
		k_1 = 3 \f$, \f$ k_1 = 5 \f$, \f$ \mu = 2 \f$ and \f$
		\nu = 1 \f$.

 	    <li>\verbatim ramp <cutoff> <force_magnitude> \endverbatim
		a simple step potential for initialization.<BR>
		The parameters are the cutoff and the force
		magnitude. If two particles are within the
		cutoff, they feel a constant repulsion of the
		given magnitude.
	</ul>

	     If no \<interaction_type\> is given,
	     \verbatim inter <particle_type_number1> <particle_type_number2> \endverbatim
	     returns the parameters of the currently active potentials for
	     non-bonded interactions in the format
	     \verbatim 0 1 lennard-jones 1.0 2.0 1.1225 0.0 0.0 \endverbatim
	     which corresponds to the input-format of \ref tcl_inter.
	     Again the first two integers are \<particle_type_number1\> and \<particle_type_number2\>.

	<li> \anchor tcl_bonded <b>Bonded interactions: </b>
	     \verbatim inter <bond_type_number> ( <interaction_type>|<num> ) <value>* \endverbatim
	     Bonded interaction (bonds are set using \ref tcl_part).
	     If \<num\> is given, the number of interaction partners is given (for example 1 for FENE).
	     Currently known \<interaction_type\>s are:

	     <b>Bond length potentials:</b> (two body interactions)
	     <ul>
		<li> \verbatim fene <K_fene> <R_fene> \endverbatim
			FENE potential
			\f[ U^{FENE} = -\frac{1}{2} K_{FENE} R_{FENE}^2 \ln
			\left( 1 - \left( \frac{r}{R_{FENE}} \right)^2 \right) \f]
		<li> \verbatim harmonic <K_harmonic> <R_harmonic> \endverbatim
			Harmonic potential
			\f[ U^{Harmonic} = \frac{1}{2} K_{harmonic} \left( r - R_{harmonic} \right)^2 \f]
	     	<li> \verbatim subt_lj <K_subt_lj>  <R_subt_lj>  \endverbatim
		    	This "bonded" interaction subtracts the Lennard-Jones force/energy of every bonded
			pair from the total force/energy. The first parameter, \verbatim <K_subt_lj> \endverbatim
			is a dummy and is not used. The second parameter, \verbatim <R_subt_lj> \endverbatim 
			is used as a check. If the any bond length in the system exceeds this value,
			the program crashes. When not needed, this crashing can be disabled by commenting 
			out a few lines in subt_lj.h .
			When using this "bonded" interaction, it is worthwhile to consider capping the
			Lennard-Jones potential appropriately so that round-off errors can be avoided. 
	     </ul>

	     <b>Bond angle potentials:</b> (three body interactions)<br>

	     <table border="no"><tr>
	     <td>	     
	     There are three different implementations for the bond angle
	     potential. Use the compile flags/switches in \ref config.h to choose
	     one of them. Default is the cosine bend potential (flag:
	     <tt>BOND_ANGLE_COSINE</tt>)<br>

	     The used definitions are illustrated in the picture on
	     the right side showing three particles i,j and k at
	     position \f$ \vec{r}_i \f$, \f$ \vec{r}_j \f$ and
	     \f$ \vec{r}_k \f$ with bond vectors \f$ \vec{b}_{ij} \f$ and
	     \f$ \vec{b}_{jk} \f$. For all potentials we use the
	     definition 
	     \f$ \phi := \arccos(\frac{\vec{b}_{ij}.\vec{b}_{jk}}{b_{ij} b_{jk}}) \f$. 
	     This also explains the use of potentials which contain
	     \f$ \cos(\phi) \f$ since this saves computational
	     costly \f$ \arccos \f$ and \f$ \sin \f$ operations.
	     </td>	     
	     <td>
	     \image latex bond_angle.eps "Linked cells structure" width=5cm
	     <img src="../figs/bond_angle.gif" width=50>
	     </td>
	     </tr></table>
	     <ul>			
		<li> \verbatim angle <bend> [<phi0>]\endverbatim
		
		\<bend\> is the bending constant in units of KT. The
		optional parameter \<phi0\> = \f$ \phi_o \f$ is the
		equilibirum bond angle in rad ranging from 0 to \f$
		\pi \f$. If this paramter is not given the default
		value is \f$ \phi_o = \pi \f$ which corresponds to a
		stretched configuration.

		<ul>
		        <li> Harmonic bond angle potential: (flag: <tt>BOND_ANGLE_HARMONIC</tt>)<br>
			This potential is also used for example in YASP and good old polyMD.
			\f[ U^{bend}_{harmonic} = bend (\phi - \phi_0)^2 \f]
		
			<li> Cosine bond angle potential: (flag: <tt>BOND_ANGLE_COSINE</tt>)<br>
			The ESPResSo original!
			\f[ U^{bend}_{cosine} = bend (1 + \cos(\phi - \phi0)) \f]
			<li> Cosine square bond angle potential: (flag: <tt>BOND_ANGLE_COSSQUARE</tt>)<br>
			A form which is used for example in the GROMOS96 force field.
			\f[ U^{bend}_{cossquare} = bend (\cos(\phi) - \cos(\phi_0))^2 \f]

		</ul>
	     </ul>
	     If no \<interaction_type\> is given,
	     \verbatim inter <bond_type_number> \endverbatim
	     returns the parameters of the potential responsible for the
	     bonded interactions of bonds with that \<bond_type_number\> in the format
	     \verbatim 0 FENE 7.0 2.0 \endverbatim	
	     which again directly corresponds to the input-format of the respective
	     interaction with the first integer being \<bond_type_number\>.

	<li> \anchor tcl_coulomb <b> Coulomb interaction: </b>
	     \verbatim inter	coulomb <bjerrum-length> <method> [parameters] \endverbatim

	     Implemented Methods are: 

	     <ul>
		<li> \verbatim p3m <r_cut> <mesh> <cao> <alpha> \endverbatim
		     or
		     \verbatim p3m tune accuracy <value> [r_cut <value> mesh <value> cao <value>] \endverbatim	
		     This is an implemantation of the 1/r Coulomb potential
		     \f[ U^{C-P3M} = \ell_B T \frac{q_1 q_2}{r} \f]
		     with help of the P3M Method described elsewhere. 

		     Make sure you know how to tune p3m parameters before
		     using the automatic tuning feature. Details are
		     described in the documentation of \ref
		     P3M_tune_parameters.

		     Some additional p3m parameters have preset values:
		     \verbatim epsilon = 0.0 \endverbatim 
		     The dielectric constant of the surrounding medium.
		     \verbatim n_interpol = 32768 \endverbatim 
		     Number of interpolation points for the charge assignment function.
		     \verbatim mesh_off = 0.5 0.5 0.5 \endverbatim 
		     Offset of the first mesh point from the lower left corner of the simulation box
		     in units of the mesh constan.
		     As soon as p3m is turned on the additional parameters can be changed with:
		     \verbatim inter coulomb <parameter-name> <value(s)>  \endverbatim

		     <b> Make sure that you know the relevance of the P3M Parameters befor using P3M !!!</b>

		<li> \verbatim dh <kappa> <r_cut> \endverbatim
		     Debye-Hueckel potential: 
		     \f[ U^{C-DH} = 	\ell_B T \frac{q_1 q_2 exp(-\kappa r)}{r} \f]
		     For \f[ \kappa = 0 \f] this corresponds to the plein coulomb potential.
	    </ul>		

	    \verbatim inter	coulomb 0.0 \endverbatim
	    disables coulomb interactions hence deactivating the electrostatic subsystem.
	    \verbatim inter	coulomb \endverbatim
	    returns the actual parameters of the coulomb interaction as a tcl-list, e.g.
	    \verbatim {coulomb 1.0 p3m 7.75 8 5 0.1138 0.0} {coulomb epsilon 0.1 n_interpol 32768 mesh_off 0.5 0.5 0.5} \endverbatim
	    which has the correct format to be used as input to 'inter' as well. If
	    \verbatim coulomb 0.0 \endverbatim
	    is returned, no electrostatics are active at the moment.

	<li> \anchor tcl_other_inter <b>Other interaction types:</b> 
	<ul>
	    <li>\verbatim inter <particle_type_number1> <particle_type_number1> comfixed <comfixed_flag> \endverbatim
      This interaction type applies a constraint on particles of type particle_type_number1 such that during the integration the center of mass of these particles is fixed. This is accomplished as follows: The sum of all the forces acting on particles of type particle_type_number1 are calculated. These include all the forces due to other interaction types and also the thermostat. Next a force equal in magnitude, but in the oppositte direction is applied on the particles. This force is divided equally on all the particles of type particle_type_number1, since currently there is no mass concept in Espresso. Note that the syntax of the declaration of comfixed interaction requires the same particle type to be input twice. If different particle types are given in the input, the program exits with an error message. The comfixed_flag can be set to 1 (which turns on the interaction) or 0 (to turn off the interaction).
        
	    <li>\verbatim inter <particle_type_number1> <particle_type_number2> comforce <comforce_flag> 
      <comforce_dir> <comforce_force> <comforce_fratio>\endverbatim
      The comforce interaction type enables one to pull away particle groups of two different types. It is mainly designed for pulling experiments on budles. Within a bundle of molecules of type number 1 (t1) lets mark one molecule as of type 2 (t2). Using comforce one can apply a force such that t2 can be pulled away from the bundle. 
      The comforce_flag is set to 1 to turn on the interaction, and to 0 otherwise. 
      The pulling can be done in two different directions. Either parallel to the major axis of the bundle ( comforce_dir = 0) or perpendicular to the major axis of the bundle (comforce_dir = 1).
      comforce_force is used to set the magnitude of the force.
      comforce_fratio is used to set the ratio of the force applied on particles of t1 vs t2. This is useful if one has to keep the total applied force on the bundle and on the target molecule the same. A force of magnitude comforce_force is applied on t2 particles, and a force of magnitude (comforce_force * comforce_fratio) is applied on t1 particles.
	</ul>

</ol>

\verbatim inter \endverbatim
	returns a list of <i>all</i> bonded and non-bonded interactions as a Tcl-list,
	in the same formats as above, e. g.
	\verbatim {0 0 lennard-jones 1.0 2.0 1.1225 0.0 0.0} {0 FENE 7.0 2.0} {1 angle 1.0}\endverbatim	
	The C implementation is \ref #inter.
*/
