PROGRAMM:
===============================================================================

Espresso is a parallel molecular dynamics program.  It uses Tcl
(http://tcl.activestate.com) as controlling language to allow great
flexibility.

GETTING STARTED:
===============================================================================

System requierments:
Script language:   tcl 8.3 or higher
OS:                Linux ,OSF1 or AIX

CODE COMPILATION
===============================================================================

To generate the code:

gmake

You find the code depending on the mashine in:
Linux/Espresso
OSF1/Espresso
AIX/Espresso

To clean junk from old compilation trials:
gmake clean         /* removes all object files */
gmake clean dep     /* removes dependency files */

COMPILER FLAGS
===============================================================================

DOCUMENTATION
===============================================================================

To generate documentation (only on pckr17, pckr27):

change into the dirctory your_home/.../Espresso
touch main.c
gmake doc

... ignore any warnings!
The documentation is in:
HTML version:  doc/html/index.html
LATEX version: doc/latex/refmen.tex / 
DVI version:   doc/latex/refmen.dvi
And for friends of WINDOWS: doc/rtf/refman.rtf

THEORY CLUSTER INFORMATION
===============================================================================

LINUX:  pckr17, pckr27
OSF1:   all workstations (except th42)
	use also thas2!
AIX:    hal


TESTING
===============================================================================

For generating a new configuration type:

create a directory: configs
setup.tcl

The configuration is in: config.gz

To integrate a created configuration (lennard-jones fluid):
test.tcl

CVS
===============================================================================

To check out a project, e. g. Espresso, you need to

setenv CVSROOT ~pep/cvsroot

The best way is to add this to your .cshrc.

Then you get your private copy by 

cvs checkout Espresso 

This will create a new directory Espresso in the CWD, containing an
up-to-date version of Espresso.

Before editing or if someone else has added something you want to
have, do

cvs update

in your Espresso directory. If you are completed with your editing, type

cvs commit <file>

to make your changes public. If <file> is omitted, all changes in all
files are committed.

To add new files to Espresso, you do

cvs add <file>

and commit, or you do

cvs remove -f <file>

to remove a file from Espresso. It will still be contained in the
history files, so nothing is lost.

For more help on CVS, see

http://www.mpip-mainz.mpg.de/www/theory/computers/pdsoftie/doc/cvs/cvs_toc.html
