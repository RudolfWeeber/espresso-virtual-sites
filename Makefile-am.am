SUBDIRS = . scripts testsuite doc doc/ug doc/dg

# List files that should go into the distribution but are not required
# by any other means
EXTRA_DIST = Makefile GPL.TXT LICENSE.TXT RELEASE_NOTES darwinlink.sh autogen.sh copyright.sh samples packages Espresso $(extra)

# List headers that are not used by the program here
noinst_HEADERS = myconfig-sample.h

# List the sources of the Espresso binary here
Espresso_bin_SOURCES = \
	main.c \
	config.c config.h \
	initialize.c initialize.h \
	global.c global.h \
	communication.c communication.h \
	binary_file.c binary_file.h \
	interaction_data.c interaction_data.h\
	verlet.c verlet.h \
	grid.c grid.h \
	integrate.c integrate.h \
	cells.c cells.h \
	ghosts.c ghosts.h \
	forces.c forces.h \
	rotation.c rotation.h \
	debug.c debug.h \
	particle_data.c	particle_data.h \
	thermostat.c thermostat.h \
	statistics.c statistics.h \
	statistics_chain.c statistics_chain.h \
	energy.c energy.h \
	pressure.c pressure.h \
	vmdsock.c vmdsock.h \
	imd.c imd.h \
	p3m.c p3m.h \
	ewald.c ewald.h \
	fft.c fft.h \
	random.c random.h \
	blockfile.c blockfile.h \
	blockfile_tcl.c blockfile_tcl.h \
	polymer.c polymer.h \
	specfunc.c specfunc.h \
	tuning.c tuning.h \
	uwerr.c	uwerr.h \
	parser.c parser.h \
	domain_decomposition.c domain_decomposition.h \
	nsquare.c nsquare.h \
	layered.c layered.h \
	mmm-common.c mmm-common.h \
	mmm1d.c mmm1d.h \
	mmm2d.c	mmm2d.h \
	modes.c	modes.h \
	topology.c topology.h \
	nemd.c nemd.h \
	statistics_cluster.c statistics_cluster.h \
	elc.c elc.h \
	statistics_molecule.c statistics_molecule.h \
	errorhandling.c	errorhandling.h \
	constraint.c constraint.h \
	maggs.c maggs.h \
	rattle.c rattle.h \
	molforces.c molforces.h \
	lb.c lb.h \
	bin.c bin.h \
	lattice.c lattice.h \
	halo.c halo.h \
	statistics_fluid.c statistics_fluid.h \
	lb-boundaries.c lb-boundaries.h \
	utils.c utils.h \
	angle.h \
	buckingham.h \
	comfixed.h \
	comforce.h \
	debye_hueckel.h \
	dihedral.h \
	fene.h \
	gb.h \
	harmonic.h \
	imd.h \
	ljcos2.h \
	ljcos.h \
	lj.h \
	steppot.h \
	bmhtf-nacl.h \
	morse.h \
	polynom.h \
	soft_sphere.h \
	subt_lj.h \
	tab.h
#deactivate building of the library
#libEspresso_a_SOURCES = $(Espresso_bin_SOURCES)

# Remove all CVS files from the distribution
# and remove the internal dir if not dist-internal is used
dist-hook:
	-rm -rf `find $(distdir) -name CVS`

#################################################################
# Installation of the main program and wrapper scripts
#################################################################
noinst_PROGRAMS = Espresso_bin

if USE_CHOOSER

# Substitute some remaining variables in the Espresso wrappers. This
# is necessary as the required values are only known at installation
# time.
install-exec-local:
# create directories
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	test -z "$(pkglibdir)" || $(mkdir_p) "$(DESTDIR)$(pkglibdir)"
	test -z "$(execpkglibdir)" || $(mkdir_p) "$(DESTDIR)$(execpkglibdir)"
# install chooser
	sed -e "s,[@]ESPRESSO_PKGLIBDIR[@],$(pkglibdir),g" \
	chooser/Espresso > $(DESTDIR)/$(bindir)/Espresso
	chmod 755 $(DESTDIR)/$(bindir)/Espresso
# install config.guess script
	$(INSTALL_SCRIPT) \
	$(srcdir)/config/config.guess $(DESTDIR)/$(pkglibdir)/
# install mpi wrapper
	sed -e "s,[@]ESPRESSO_BIN[@],$(execpkglibdir)/Espresso_bin,g;s,[@]ESPRESSO_SCRIPTS[@],$(scriptsdir),g" \
	mpiwrap/Espresso > $(DESTDIR)/$(execpkglibdir)/Espresso
	chmod 755 $(DESTDIR)/$(execpkglibdir)/Espresso
# install binary
	$(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) \
	Espresso_bin $(DESTDIR)/$(execpkglibdir)/
else

# Substitute some remaining variables in the Espresso wrappers. This
# is necessary as the required values are only known at installation
# time.
install-exec-local:
# create directories
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	test -z "$(libexecdir)" || $(mkdir_p) "$(DESTDIR)$(libexecdir)"
# install mpi wrapper
	sed -e "s,[@]ESPRESSO_BIN[@],$(libexecdir)/Espresso_bin,g;s,[@]ESPRESSO_SCRIPTS[@],$(scriptsdir),g" \
	mpiwrap/Espresso > $(DESTDIR)/$(bindir)/Espresso
	chmod 755 $(DESTDIR)/$(bindir)/Espresso
# install binary
	$(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) \
	Espresso_bin $(DESTDIR)/$(libexecdir)/
endif

#################################################################
# Documentation
#################################################################
.PHONY: FORCE doc ug dg
doc ug dg: FORCE
	cd doc; $(MAKE) --print-directory $@
FORCE:

#################################################################
# Handling of local configure headers
#################################################################

# add config/ to the INCLUDES so that the default config/$(myconfig) is
# found at compile time
INCLUDES = -I config
DEFS = -D 'MYCONFIG_H="$(myconfig)"'

# add config/ to the VPATH so that $(myconfig) can be found by make
vpath $(myconfig) $(top_builddir):$(top_srcdir):$(top_builddir)/config

# add $(myconfig) to the dependencies of all object files so that
# they get rebuilt when $(myconfig) is changed
$(Espresso_bin_OBJECTS): $(myconfig)

DISTCLEANFILES = $(top_builddir)/config/$(myconfig)

#################################################################
# Handling of the MPI fake implementation
#################################################################
if MPI_FAKE
Espresso_bin_SOURCES += mpifake/mpi.h mpifake/mpi.c
# mpifake should come before any system includes
INCLUDES += -I $(srcdir)/mpifake -I config
endif

ACLOCAL_AMFLAGS = -I config

##################################################
# Targets for backwards compatibility
##################################################
test: check
mostclean: mostlyclean
docu: doc
