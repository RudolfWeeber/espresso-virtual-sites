#  This file is part of the ESPResSo distribution (http://www.espresso.mpg.de).
#  It is therefore subject to the ESPResSo license agreement which you accepted upon receiving the distribution
#  and by which you are legally bound while utilizing this file in any form or way.
#  There is NO WARRANTY, not even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  You should have received a copy of that license along with this program;
#  if not, refer to http://www.espresso.mpg.de/license.html where its current version can be found, or
#  write to Max-Planck-Institute for Polymer Research, Theory Group, PO Box 3148, 55021 Mainz, Germany.
#  Copyright (c) 2002-2003; all rights reserved unless otherwise stated.
# 
############ general settings

### Tk (graphical interface)
TK=yes

### Intel C compiler instead of gcc
ICC=no

### Enable ('yes') for the Blade-Center (see http://www.mpip-mainz.mpg.de/theory/computers/blade/index.html)
BLADE=no

### static compilation for certain brain damaged blade clusters
STATIC=no

### Debug compiling
DEBUG=no

### ElectricFence allocation debugging
EFENCE=no

### host optimization. Leave blank for automatic setting
HOSTFLAGS=



############ compiler settings
CC=mpicc
ifeq ($(BLADE),yes)
     CC=mpicci
     ICC=yes
else
     ifeq ($(ICC),yes)
          CC=icc
     endif
endif

# architecture dependent flags for gcc 3
MODEL=$(shell awk '/\`model name/ { \
	if ($$4 == "Pentium") print $$4"-"$$5; else \
	if ($$4 == "AMD" && $$5 == "Athlon(TM)") print "Athlon-"$$6; else \
	if ($$4 == "AMD" && $$5 == "Athlon(tm)") print "Athlon-"$$6; else \
	print "Generic"; \
	exit }' \/proc/cpuinfo)

ifeq ($(ICC),yes)
     ifeq ($(BLADE),yes)
# activate optimization for Blade-Xeon-Procs (see http://www.rzg.mpg.de/docs/languages/Intel_cc.html)
          HOSTFLAGS=-tpp7 -axW -xW -march=pentium4 -I. -I/afs/ipp/@sys/soft/fftw/f95i/include
     else
          ifeq ($(MODEL),Athlon-MP)
               HOSTFLAGS= -tpp6 -xK -march=pentiumiii
          endif
     endif

     CFLAGS=-g -O3 -ip -w1 $(HOSTFLAGS)
else
# gcc optimization
     ifeq ($(HOSTFLAGS),)
          HOSTFLAGS=-march=i386

          ifeq ($(MODEL),Pentium-III)
               HOSTFLAGS= -march=pentium3 -mfpmath=sse -msse
          endif

          ifeq ($(MODEL),Athlon-MP)
               HOSTFLAGS= -march=athlon-mp -mfpmath=sse -msse
          endif

          ifeq ($(MODEL),Athlon-XP)
               HOSTFLAGS= -march=athlon-xp -mfpmath=sse -msse
          endif

          ifeq ($(MODEL),Athlon-64)
               HOSTFLAGS= -m64 -mfpmath=sse -msse2
          endif

          ifeq ($(MODEL),Athlon-Processor)
               HOSTFLAGS= -march=athlon -mfpmath=sse -msse
          endif
     endif

     CFLAGS=-g -O3 -Wall $(HOSTFLAGS) -finline-limit=10000000 \
	    -ffast-math
endif


# debug compiler flags
ifeq ($(DEBUG),yes)
     CFLAGS= -g -fno-inline -Wall $(HOSTFLAGS)
endif

############ name of makedepend (or gcc -ME)
DEPEND=makedepend

############ C++ compiler settings
CXX=g++

############ MDINLINE defines hwo to declare inline functions
CFLAGS+= -DMDINLINE="inline static"

############ linker settings
LINK=$(CC)
LDLIBS= -lm -lpthread

ifeq ($(STATIC),yes)
	LDFLAGS+=-static
	STATIC_POSTLOAD=-lm -ldl
endif
ifeq ($(BLADE),yes)
     # in Blade-Center, include optimized math-libraries (see http://dbforums.com/t564728.html)
     LDFLAGS+=-lsvml
endif

########### ElectricFence
ifeq ($(EFENCE),yes)
     LDLIBS+= -lefence
     CFLAGS+= -DEFENCE
endif

########### FFTW
ifeq ($(BLADE),yes)
     # LDLIBS+= -L/afs/ipp-garching.mpg.de/home/b/bhm/Espresso -lrfftw -lfftw
     LDLIBS+= -L/afs/ipp/@sys/soft/fftw/f95i/lib -lrfftw -lfftw
else
     LDLIBS+= -L/usr/local/lib -ldrfftw -ldfftw
endif

########### TCL
CFLAGS+= -DUSE_NON_CONST
ifeq ($(BLADE),yes)
     LDLIBS+= -L/afs/ipp/@sys/soft/gnu/lib -ltcl8.4
else
     LDLIBS+= -ltcl8.4
endif

########### TK
ifeq ($(TK),yes)
     CFLAGS+= -DTK
     LDLIBS+= -ltk8.4
endif

########### LAM/MPI
ifeq ($(ICC),yes)
     ifeq ($(BLADE),yes)
     else
          CFLAGS+= -I/opt/lam/include
          LDLIBS+= -L/opt/lam/lib -lmpi -llam
     endif
endif

############# special flags for C++ compilation
CXXFLAGS=$(CFLAGS) -felide-constructors -fomit-frame-pointer -fno-rtti
